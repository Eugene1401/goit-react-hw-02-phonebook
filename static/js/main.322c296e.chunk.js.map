{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","onSubmit","type","placeholder","onChange","Component","ContactListItem","onRemove","onClick","ContactsList","contacts","length","map","contact","Filter","filter","App","number","handleAddContact","newContact","handleCheckUnique","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.322c296e.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  phone: \"\",\n};\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    phone: \"\",\n  };\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, phone } = this.state;\n    const { onAdd } = this.props;\n    const isValidatedForm = this.validateForm;\n\n    if (!isValidatedForm) return;\n    onAdd({ id: uuid(), name, phone });\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name, phone } = this.state;\n    const { onCheckUnique } = this.props;\n    if (!name || !phone) {\n      alert(\"Some fields are empty\");\n      return false;\n    }\n\n    return onCheckUnique(name);\n  };\n\n  resetForm = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={this.handleChangeForm}\n        />\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Enter phone number\"\n          value={phone}\n          onChange={this.handleChangeForm}\n        />\n        <button type=\"submit\">Add Contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","const ContactListItem = ({ id, name, phone, onRemove }) => {\n  return (\n    <li>\n      {name}: {phone} <button onClick={() => onRemove(id)}>Delete</button>\n    </li>\n  );\n};\n\nconst ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map((contact) => (\n        <ContactListItem {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","const Filter = ({ filter, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Enter name for Search\"\n    />\n  );\n};\n\nexport default Filter;\n","import \"./App.css\";\nimport { Component } from \"react\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactsList from \"./components/ContactsList\";\nimport Filter from \"./components/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  handleAddContact = (newContact) =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckUnique = (name) => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find((contact) => contact.name === name);\n    isExistContact && alert(\"Contact is already exist\");\n\n    return !isExistContact;\n  };\n\n  handleRemoveContact = (id) =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    }));\n\n  handleFilterChange = (filter) => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <div className=\"wrapper\">\n          <h2>Form Contact</h2>\n          <ContactForm\n            onAdd={this.handleAddContact}\n            onCheckUnique={this.handleCheckUnique}\n          />\n          <Filter filter={filter} onChange={this.handleFilterChange} />\n          <ContactsList\n            contacts={visibleContacts}\n            onRemove={this.handleRemoveContact}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}